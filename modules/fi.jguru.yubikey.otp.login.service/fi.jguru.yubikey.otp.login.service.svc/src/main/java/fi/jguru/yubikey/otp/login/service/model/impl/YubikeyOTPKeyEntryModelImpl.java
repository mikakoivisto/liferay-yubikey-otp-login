/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package fi.jguru.yubikey.otp.login.service.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import fi.jguru.yubikey.otp.login.service.model.YubikeyOTPKeyEntry;
import fi.jguru.yubikey.otp.login.service.model.YubikeyOTPKeyEntryModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the YubikeyOTPKeyEntry service. Represents a row in the &quot;JGURU_YubikeyOTPKeyEntry&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link YubikeyOTPKeyEntryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link YubikeyOTPKeyEntryImpl}.
 * </p>
 *
 * @author Mika Koivisto
 * @see YubikeyOTPKeyEntryImpl
 * @see YubikeyOTPKeyEntry
 * @see YubikeyOTPKeyEntryModel
 * @generated
 */
@ProviderType
public class YubikeyOTPKeyEntryModelImpl extends BaseModelImpl<YubikeyOTPKeyEntry>
	implements YubikeyOTPKeyEntryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a yubikey o t p key entry model instance should use the {@link YubikeyOTPKeyEntry} interface instead.
	 */
	public static final String TABLE_NAME = "JGURU_YubikeyOTPKeyEntry";
	public static final Object[][] TABLE_COLUMNS = {
			{ "keyId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "publicId", Types.VARCHAR },
			{ "name", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("keyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("publicId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("name", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table JGURU_YubikeyOTPKeyEntry (keyId LONG not null primary key,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,publicId VARCHAR(75) null,name VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table JGURU_YubikeyOTPKeyEntry";
	public static final String ORDER_BY_JPQL = " ORDER BY yubikeyOTPKeyEntry.keyId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY JGURU_YubikeyOTPKeyEntry.keyId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(fi.jguru.yubikey.otp.login.service.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.fi.jguru.yubikey.otp.login.service.model.YubikeyOTPKeyEntry"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(fi.jguru.yubikey.otp.login.service.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.fi.jguru.yubikey.otp.login.service.model.YubikeyOTPKeyEntry"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(fi.jguru.yubikey.otp.login.service.service.util.PropsUtil.get(
				"value.object.column.bitmask.enabled.fi.jguru.yubikey.otp.login.service.model.YubikeyOTPKeyEntry"),
			true);
	public static final long PUBLICID_COLUMN_BITMASK = 1L;
	public static final long USERID_COLUMN_BITMASK = 2L;
	public static final long KEYID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(fi.jguru.yubikey.otp.login.service.service.util.PropsUtil.get(
				"lock.expiration.time.fi.jguru.yubikey.otp.login.service.model.YubikeyOTPKeyEntry"));

	public YubikeyOTPKeyEntryModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _keyId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setKeyId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _keyId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return YubikeyOTPKeyEntry.class;
	}

	@Override
	public String getModelClassName() {
		return YubikeyOTPKeyEntry.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("keyId", getKeyId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("publicId", getPublicId());
		attributes.put("name", getName());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long keyId = (Long)attributes.get("keyId");

		if (keyId != null) {
			setKeyId(keyId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String publicId = (String)attributes.get("publicId");

		if (publicId != null) {
			setPublicId(publicId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}
	}

	@Override
	public long getKeyId() {
		return _keyId;
	}

	@Override
	public void setKeyId(long keyId) {
		_columnBitmask = -1L;

		_keyId = keyId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public String getPublicId() {
		if (_publicId == null) {
			return StringPool.BLANK;
		}
		else {
			return _publicId;
		}
	}

	@Override
	public void setPublicId(String publicId) {
		_columnBitmask |= PUBLICID_COLUMN_BITMASK;

		if (_originalPublicId == null) {
			_originalPublicId = _publicId;
		}

		_publicId = publicId;
	}

	public String getOriginalPublicId() {
		return GetterUtil.getString(_originalPublicId);
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			YubikeyOTPKeyEntry.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public YubikeyOTPKeyEntry toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (YubikeyOTPKeyEntry)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		YubikeyOTPKeyEntryImpl yubikeyOTPKeyEntryImpl = new YubikeyOTPKeyEntryImpl();

		yubikeyOTPKeyEntryImpl.setKeyId(getKeyId());
		yubikeyOTPKeyEntryImpl.setCompanyId(getCompanyId());
		yubikeyOTPKeyEntryImpl.setUserId(getUserId());
		yubikeyOTPKeyEntryImpl.setUserName(getUserName());
		yubikeyOTPKeyEntryImpl.setCreateDate(getCreateDate());
		yubikeyOTPKeyEntryImpl.setModifiedDate(getModifiedDate());
		yubikeyOTPKeyEntryImpl.setPublicId(getPublicId());
		yubikeyOTPKeyEntryImpl.setName(getName());

		yubikeyOTPKeyEntryImpl.resetOriginalValues();

		return yubikeyOTPKeyEntryImpl;
	}

	@Override
	public int compareTo(YubikeyOTPKeyEntry yubikeyOTPKeyEntry) {
		int value = 0;

		if (getKeyId() < yubikeyOTPKeyEntry.getKeyId()) {
			value = -1;
		}
		else if (getKeyId() > yubikeyOTPKeyEntry.getKeyId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof YubikeyOTPKeyEntry)) {
			return false;
		}

		YubikeyOTPKeyEntry yubikeyOTPKeyEntry = (YubikeyOTPKeyEntry)obj;

		long primaryKey = yubikeyOTPKeyEntry.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		YubikeyOTPKeyEntryModelImpl yubikeyOTPKeyEntryModelImpl = this;

		yubikeyOTPKeyEntryModelImpl._originalUserId = yubikeyOTPKeyEntryModelImpl._userId;

		yubikeyOTPKeyEntryModelImpl._setOriginalUserId = false;

		yubikeyOTPKeyEntryModelImpl._setModifiedDate = false;

		yubikeyOTPKeyEntryModelImpl._originalPublicId = yubikeyOTPKeyEntryModelImpl._publicId;

		yubikeyOTPKeyEntryModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<YubikeyOTPKeyEntry> toCacheModel() {
		YubikeyOTPKeyEntryCacheModel yubikeyOTPKeyEntryCacheModel = new YubikeyOTPKeyEntryCacheModel();

		yubikeyOTPKeyEntryCacheModel.keyId = getKeyId();

		yubikeyOTPKeyEntryCacheModel.companyId = getCompanyId();

		yubikeyOTPKeyEntryCacheModel.userId = getUserId();

		yubikeyOTPKeyEntryCacheModel.userName = getUserName();

		String userName = yubikeyOTPKeyEntryCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			yubikeyOTPKeyEntryCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			yubikeyOTPKeyEntryCacheModel.createDate = createDate.getTime();
		}
		else {
			yubikeyOTPKeyEntryCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			yubikeyOTPKeyEntryCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			yubikeyOTPKeyEntryCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		yubikeyOTPKeyEntryCacheModel.publicId = getPublicId();

		String publicId = yubikeyOTPKeyEntryCacheModel.publicId;

		if ((publicId != null) && (publicId.length() == 0)) {
			yubikeyOTPKeyEntryCacheModel.publicId = null;
		}

		yubikeyOTPKeyEntryCacheModel.name = getName();

		String name = yubikeyOTPKeyEntryCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			yubikeyOTPKeyEntryCacheModel.name = null;
		}

		return yubikeyOTPKeyEntryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{keyId=");
		sb.append(getKeyId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", publicId=");
		sb.append(getPublicId());
		sb.append(", name=");
		sb.append(getName());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("fi.jguru.yubikey.otp.login.service.model.YubikeyOTPKeyEntry");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>keyId</column-name><column-value><![CDATA[");
		sb.append(getKeyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publicId</column-name><column-value><![CDATA[");
		sb.append(getPublicId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = YubikeyOTPKeyEntry.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			YubikeyOTPKeyEntry.class
		};
	private long _keyId;
	private long _companyId;
	private long _userId;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _publicId;
	private String _originalPublicId;
	private String _name;
	private long _columnBitmask;
	private YubikeyOTPKeyEntry _escapedModel;
}